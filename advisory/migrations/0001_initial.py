# Generated by Django 4.2 on 2025-04-04 11:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Farm Name')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)], verbose_name='Latitude')),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)], verbose_name='Longitude')),
                ('geojson_file', models.FileField(blank=True, null=True, upload_to='farm_geojson/', verbose_name='GeoJSON File')),
                ('total_area', models.FloatField(help_text='Area in hectares', verbose_name='Total Area (ha)')),
                ('soil_type', models.CharField(choices=[('clay', 'Clay'), ('loam', 'Loam'), ('sandy', 'Sandy'), ('silt', 'Silt')], max_length=20, verbose_name='Soil Type')),
                ('established_date', models.DateField(verbose_name='Established Date')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Farm',
                'verbose_name_plural': 'Farms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Field Name')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)], verbose_name='Latitude')),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)], verbose_name='Longitude')),
                ('boundary_geojson', models.FileField(blank=True, null=True, upload_to='field_boundaries/', verbose_name='Boundary GeoJSON')),
                ('area_ha', models.FloatField(blank=True, null=True, verbose_name='Area (ha)')),
                ('elevation', models.FloatField(blank=True, null=True, verbose_name='Average Elevation (m)')),
                ('soil_ph', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(3.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='Soil pH')),
                ('organic_matter', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Organic Matter (%)')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='advisory.farm')),
            ],
            options={
                'verbose_name': 'Field',
                'verbose_name_plural': 'Fields',
                'ordering': ['farm', 'name'],
            },
        ),
        migrations.CreateModel(
            name='IrrigationAdvisory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Advisory Date')),
                ('water_requirement', models.FloatField(verbose_name='Water Requirement (mm)')),
                ('recommendation', models.TextField(verbose_name='Recommendation')),
                ('soil_moisture', models.FloatField(blank=True, null=True, verbose_name='Soil Moisture (%)')),
                ('rainfall_predicted', models.FloatField(blank=True, null=True, verbose_name='Predicted Rainfall (mm)')),
                ('et0', models.FloatField(blank=True, null=True, verbose_name='Reference Evapotranspiration (mm)')),
                ('kc', models.FloatField(blank=True, null=True, verbose_name='Crop Coefficient')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advisories', to='advisory.field')),
            ],
            options={
                'verbose_name': 'Irrigation Advisory',
                'verbose_name_plural': 'Irrigation Advisories',
                'ordering': ['-date'],
                'get_latest_by': 'date',
            },
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_type', models.CharField(choices=[('maize', 'Maize'), ('soybean', 'Soybean'), ('wheat', 'Wheat'), ('rice', 'Rice')], max_length=50, verbose_name='Crop Type')),
                ('variety', models.CharField(blank=True, max_length=100, verbose_name='Variety')),
                ('planting_date', models.DateField(verbose_name='Planting Date')),
                ('harvest_date', models.DateField(blank=True, null=True, verbose_name='Expected Harvest Date')),
                ('planting_density', models.FloatField(blank=True, null=True, verbose_name='Planting Density (plants/ha)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='advisory.field')),
            ],
            options={
                'verbose_name': 'Crop',
                'verbose_name_plural': 'Crops',
                'ordering': ['-planting_date'],
            },
        ),
    ]
